Variables de sesion: son una forma de guardar datos/estado del usuario
que ingresa. Esto es porque las peticiones no guardan estado.  API REST
Son una forma de vincular un usuario del lado del cliente con nuestra aplicacion
Antes las peticiones guardaban estado, pero se dejo de trabajar de esa manera porque ocupa espacio)

session_start()-->para iniciar la sesion. abrir variable de sesion-->en cada pag que usemos
Se habilitan las sesiones y voy a tener la variable $_SESSION
En todas las paginas que haga sesion_start() voy a tener acceso a $_SESSION
variable global: $_SESSION
$_SESSION{'nombre'}--->puedo asignarle informacion.

sesion_unset()--->Elimina todas las variables de sesion
sesion_destroy--->Elimina la sesion
la sesion lo que hace es escribir en el cliente un id, una cookie unica
que contiene informacion y se envia en cada peticion que hace el cliente
, hasta que se cierre la misma.

Cookies: Se guardan en el cliente
setcookie('nameCookie', "lo que quiera asignarle")-->para setear una cookie
la cual queda almacenada en 'cookies'
El problema es que puedo editarlo (con f12)->cookies

variable global: $_COOKIE-->recibo del usuario
por ej: $_COOKIE('usuario')

Sesion guarda informacion de la peticion en el servidor
Cookie guarda informacion de la peticion en el usuario
Por ej: usuario y pass guardamos en session, y luego otra inf en cookies

Con apiRest:
googlear: jwt para tener un token. Comunicacion entre cliente y servidor
header: metadata del token
payload: donde compartimos informacion-->esto es publico
firma: firma unica
Genera una firma a traves de la clave secreta, de modo que si se cambian los valores
en f12 me generaria una firma distinta.

Clas JWT
jwt::encode
jwt::decode-->para decodificar, si le paso algun argumento distinto al que
se creo, me tira error.
Esto es para que se verifique el token que me envia el cliente

Puedo recibir el token: (en postman se envia en headers, creando variable token)
en mi servidor: $headers =getallheaders();
$token = $headers('token');

uso: por ej: pedimos usuario y contrase√±a, le damos un token y luego 
para efectuar algun cambio solicitamos el token y sabremos si modifico o no algun dato(en f12).
Es mas que nada para autentificacion.
Por eso se usa una key unica y secreta, para que no pueda enviarme otro token
a traves de mi clave.